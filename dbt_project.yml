
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'happiness_vs_meat_consumption'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros", "tests_macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  happiness_vs_meat_consumption:
    +materialized: "{{ env_var('DBT_MATERIALIZATION', 'ephemeral') }}"
    +schema: happiness

tests:
  happiness_vs_meat_consumption:
    +schema: happiness_tests
    integration_tests:
      +tags:
        - integration_tests
    unit_tests:
      +tags:
        - unit_tests

seeds:
  happiness_vs_meat_consumption:
    raw_examples:
      +schema: happiness_tests
      meat_consumption_worldwide_example:
        +alias: "{{ var('unique_identifier', '') ~ 'meat_consumption_worldwide_example' }}"
      subject_kg_to_souls_example:
        +alias: "{{ var('unique_identifier', '') ~ 'subject_kg_to_souls_example' }}"

vars:
  integration_tests: 'false'